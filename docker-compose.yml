version: "3"
services:
  database: # nome do serviço
    image: mysql
    container_name: mysqldockercompose
    environment:
      MYSQL_ROOT_PASSWORD: mysql
      MYSQL_DATABASE: votingapp
    ports:
      - "3307:3306" # só porque já tenho um mysql na porta 3306
    volumes:
      - ./votingappdatabase:/var/lib/mysql
    networks:
      - votingnet

  appserver1:
    container_name: appserver1dockercompose
    build: ./AppVotos
    # ports:
    #   - "8081:8080"
    depends_on:
      - database
    environment: # ver application.properties
      DB_HOST: database
      DB_PORT: 3306 # deve usar a porta interna exposta pelo container da base de dados e não a exposta ao host (3307)
      DB_USER: root
      DB_PASSWORD: mysql
      DB_NAME: votingapp
      APP_DOMAIN: localhost
      VUE_SERVER: localhost
    networks:
      - votingnet
  
  # réplica do appserver1
  appserver2:
    container_name: appserver2dockercompose
    build: ./AppVotos
    # ports:
    #   - "8082:8080"
    depends_on:
      - database
      - appserver1 # para evitar que ambos os servidores tentem mexer na base de dados em simultâneo
    environment: # ver application.properties
      DB_HOST: database
      DB_PORT: 3306 # deve usar a porta interna exposta pelo container da base de dados e não a exposta ao host (3307)
      DB_USER: root
      DB_PASSWORD: mysql
      DB_NAME: votingapp
      APP_DOMAIN: localhost
      VUE_SERVER: localhost
    networks:
      - votingnet

  nginx: # este é o servidor utilizado pelo vue que faz o load balancing entre os dois servidores de aplicação (appserver1 e appserver2)
    image: nginx
    container_name: nginxdockercompose
    ports:
      - "8080:8080"
      - "8081:8081"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - appserver1
      - appserver2
    networks:
      - votingnet

networks:
  votingnet:
    name: votingnet
    driver: bridge